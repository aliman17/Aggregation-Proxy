fit = glm(Y / (1 - Y) ~ data$age, family = binomial)
tmp = Y / (1 - Y)
fit = glm( Y ~ data$age, family = binomial)
fit
summary(fit)
Y2 = log(Y / (1 - Y))
fit.lm = lm(Y2 ~ data$age)
>boot
?boot
library(boot)
?boot
a = 1:10
b = 5:14
cor(a, b)
mat = matrix(1, nrow = 10, ncol = 5)
cor(mat)
cor(t(mat))
y <- 10:19
x <- 1:10
y <- 10:19
z <- 5:14
cor(x, cbind(y, z))
c = cor(baseline, cbind(x1, x2, x3, x4, x5))
cc =  cor(x, cbind(y, z))
print(cc)
which.max(cc)
colnames(cc)[which.max(cc)]
y = 4 + rnorm(10)
x = 4 + rnorm(10)
y = 4 + rnorm(30)
x = 4 + rnorm(30)
y = c(y, 8 +rnorm(8))
x = c(x, 8 +rnorm(8))
plot(x, y)
y = 4 + rnorm(30)
x = 4 + rnorm(30)
y = c(y, 18 +rnorm(8))
x = c(x, 18 +rnorm(8))
plot(x, y)
y = 4 + rnorm(40)
x = 4 + rnorm(40)
y = c(y, 18 +rnorm(8))
x = c(x, 18 +rnorm(8))
plot(x, y)
fit = lm(y~x)
lines(fit)
plot(fit)
plot(fit)
fit$coefficients
abline(fit$coefficients)
y = 4 + rnorm(40)
x = 4 + rnorm(40)
y = c(y, 18 +rnorm(8))
x = c(x, 18 +rnorm(8))
plot(x, y)
fit = lm(y~x)
fit = lm(y~x)
abline(fit$coefficients)
plot(x, y)
fit = lm(y~x)
abline(fit$coefficients, col = "red")
z = rnorm(48, sd = 40)
fit2 = lm(y~x+z)
z = rnorm(48, sd = 40)
fit2 = lm(y~x+z)
plot(x,y)
abline(fit2$coefficients[c(1,2)])
z = rnorm(48, sd = 100)
fit2 = lm(y~x+z)
plot(x,y)
abline(fit2$coefficients[c(1,2)])
plot(z, y)
plot(z, y)
abline(fit2$coefficients[c(1,3)])
fit2$coefficients
fit2$coefficients[c(1,3)]
abline(fit2$coefficients[c(1,3)])
plot(z, y, xlim =c(-500, 500), ylim = c(-50, 50))
abline(fit2$coefficients[c(1,3)])
library(plotly)
require(lattice)
library(lattice)
wireframe(y ~ x * z)
wireframe(y ~ x + z)
data = data.frame(x = x, y = y, z = z)
wireframe(y ~ x + z, data = data)
persp(y ~ x + z)
persp(y ~ x + z, phi = 45, theta = 45)
?persp
persp()
x <- seq(-1.95, 1.95, length = 30)
y <- seq(-1.95, 1.95, length = 35)
z = y
persp(x, y, z)
z = y
persp(x, y, z)
x <- seq(-10, 10, length= 30)
y <- x
f <- function(x, y) { r <- sqrt(x^2+y^2); 10 * sin(r)/r }
z <- outer(x, y, f)
z[is.na(z)] <- 1
op <- par(bg = "white")
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue")
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue",
ltheta = 120, shade = 0.75, ticktype = "detailed",
xlab = "X", ylab = "Y", zlab = "Sinc( r )"
) -> res
round(res, 3)
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue", shade = 0.75, ticktype = "detailed",
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue", ticktype = "detailed",
x <- seq(-10, 10, length= 30)
y <- x
f <- function(x, y) { r <- sqrt(x^2+y^2); 10 * sin(r)/r }
z <- outer(x, y, f)
z[is.na(z)] <- 1
op <- par(bg = "white")
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue")
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue", ticktype = "detailed",
xlab = "X", ylab = "Y", zlab = "Sinc( r )"
) -> res
round(res, 3)
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue",
xlab = "X", ylab = "Y", zlab = "Sinc( r )"
) -> res
round(res, 3)
z
dim(z)
library(scatterplot3d)
attach(mtcars)
require(scatterplot3d)
require(scatterplot3d)
library(scatterplot3d)
install.packages("scatterplot3d")
library(scatterplot3d)
attach(mtcars)
y = 4 + rnorm(40)
x = 4 + rnorm(40)
y = c(y, 18 +rnorm(8))
x = c(x, 18 +rnorm(8))
z = rnorm(48, sd = 100)
scatterplot3d(y,x,z, main="3D Scatterplot")
scatterplot3d(z,x,y, main="3D Scatterplot")
abline(1, 1, 1)
abline(1, 1)
scatterplot3d(z,x,y, main="3D Scatterplot")
abline(1, 1)
abline(fit$coefficients)
abline(3, 6, 1)
scatterplot3d(z,x,y, main="3D Scatterplot")
?abline
scatterplot3d(z,x,y, main="3D Scatterplot")
scatterplot3d(x,y,z, main="3D Scatterplot")
z
z
scatterplot3d(z,x,y, main="3D Scatterplot")
abline(3, 6)
scatterplot3d(z,x,y, main="3D Scatterplot")
scatterplot3d(z,x,y, main="3D Scatterplot", pch = "3")
scatterplot3d(z,x,y, main="3D Scatterplot", pch = "*")
scatterplot3d(z,x,y, main="3D Scatterplot", pch = 20)
scatterplot3d(0,x,y, main="3D Scatterplot", pch = 20)
scatterplot3d(rep(0, length(x)),x,y, main="3D Scatterplot", pch = 20)
y = rnorm(40)
x = rnorm(40)
y = c(y, rnorm(8))
x = c(x, 18 +rnorm(8))
plot(x, y)
fit = lm(y~x)
abline(fit$coefficients, col = "red")
z = rnorm(48, sd = 100)
fit2 = lm(y~x+z)
scatterplot3d(z,x,y, main="3D Scatterplot", pch = 20)
y = rnorm(40)
x = rnorm(40)
y = c(y, 18 +rnorm(8))
x = c(x, 18 +rnorm(8))
y = rnorm(40)
x = rnorm(40)
y = c(y, 18 +rnorm(8))
x = c(x, 18 +rnorm(8))
z = rnorm(48, sd = 100)
library(scatterplot3d)
attach(mtcars)
scatterplot3d(rep(0, length(x)),x,y, main="3D Scatterplot", pch = 20)
scatterplot3d(z,x,y, main="3D Scatterplot", pch = 20)
fit = lm(y~x)
fit2 = lm(x+y+z)
fit2 = lm(y~x+z)
fit2
plot(y, z)
abline(fit2$coefficients[c(1, 3)])
fit2$coefficients
abline(fit2$coefficients[c(1, 2)])
scatterplot3d(z,x,y, main="3D Scatterplot", pch = 20)
z = rnorm(40)
y = rnorm(40)
x = rnorm(40)
y = c(y, 18 +rnorm(8))
x = c(x, 18 +rnorm(8))
z = rnorm(40, sd = 100)
z = c(z, rnorm(18, sd = 1))
scatterplot3d(z,x,y, main="3D Scatterplot", pch = 20)
y = rnorm(40)
x = rnorm(40)
y = c(y, 18 +rnorm(8))
x = c(x, 18 +rnorm(8))
z = rnorm(40, sd = 100)
z = c(z, rnorm(8, sd = 1))
library(scatterplot3d)
attach(mtcars)
scatterplot3d(rep(0, length(x)),x,y, main="3D Scatterplot", pch = 20)
scatterplot3d(z,x,y, main="3D Scatterplot", pch = 20)
scatterplot3d(x,y,z, main="3D Scatterplot", pch = 20)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20)
scatterplot3d(x,y,z, main="3D Scatterplot", pch = 20)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20)
scatterplot3d(x,y,z, main="3D Scatterplot", pch = 20)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300))
scatterplot3d(x,y,z, main="3D Scatterplot", pch = 20)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300))
scatterplot3d(x,y,z, main="3D Scatterplot", pch = 20)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300))
fit = lm(y~x)
lines(fit$coefficients)
abline(fit$coefficients)
abline(0, 0.4)
abline(0, 0.2)
abline(40, 0.2)
abline(40, 0.2)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300))
fit = lm(y~x)
abline(40, 0.2)
abline(10, 0.2)
abline(3, 0.2)
abline(1, 0.2)
abline(0.2, 0.2)
abline(0.4, 0.2)
abline(0.3, 0.2)
abline(0.3, 0.3)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300))
fit = lm(y~x)
abline(0.3, 0.3)
abline(0.3, 0.27)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300))
fit = lm(y~x)
abline(0.3, 0.28)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300))
fit = lm(y~x)
abline(0.3, 0.28, col = "red")
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = x)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
scatterplot3d(x,y,z, main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
abline(0.3, 1, col = "red")
abline(0.3, 10, col = "red")
abline(0.3, 100, col = "red")
abline(0.3, 1000, col = "red")
scatterplot3d(x,y,z, main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
abline(0.3, 1000, col = "red")
vline(0.3, 1000, col = "red")
abline(v = 4, col = "red")
abline(v = 1, col = "red")
abline(v = 0.5, col = "red")
scatterplot3d(x,y,z, main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
abline(v = 0.5, col = "red")
attach(mtcars)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
abline(0.3, 0.28, col = "red")
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
abline(0.3, 0.28, col = "red")
abline(0.3, 0.28, col = "blue", lty = 2)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
abline(0.3, 0.28, col = "blue", lty = 2)
abline(0.3, 0.4, col = "blue", lty = 2)
abline(0.25, 0.4, col = "blue", lty = 2)
abline(0.2, 0.4, col = "blue", lty = 2)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
abline(0.2, 0.4, col = "blue", lty = 2)
abline(0.1, 0.4, col = "blue", lty = 2)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
abline(0.1, 0.4, col = "blue", lty = 2)
abline(0.1, 0.6, col = "blue", lty = 2)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
abline(0.1, 0.5, col = "blue", lty = 2)
abline(0.1, 0.8, col = "blue", lty = 2)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
abline(0.1, 0.8, col = "blue", lty = 2)
abline(0.1, 1, col = "blue", lty = 2)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
abline(0.1, 1, col = "blue", lty = 2)
abline(0.1, -1, col = "blue", lty = 2)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
abline(0.1, -0.3, col = "blue", lty = 2)
abline(0.1, -10, col = "blue", lty = 2)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-0, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
abline(0.1, -10, col = "blue", lty = 2)
abline(0.1, 10, col = "blue", lty = 2)
abline(0.1, 0.8, col = "blue", lty = 2)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-0, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
abline(0.1, 0.8, col = "blue", lty = 2)
lines(c(0, 5), c(0,15), col = "blue", lty = 2, )
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-0, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
lines(c(0, 5), c(0,15), col = "blue", lty = 2, )
lines(c(0, 5), c(0,1), col = "blue", lty = 2, )
lines(c(0, 5), c(0,4), col = "blue", lty = 2, )
lines(c(0, 5), c(0,3), col = "blue", lty = 2, )
lines(c(0, 5), c(0,2), col = "blue", lty = 2, )
lines(c(0, 2), c(0,2), col = "blue", lty = 2, )
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-0, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
lines(c(0, 2), c(0,2), col = "blue", lty = 2, )
lines(c(0, 2), c(0,3), col = "blue", lty = 2, )
lines(c(0, 3), c(0,3), col = "blue", lty = 2, )
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-0, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
lines(c(0, 3), c(0,3), col = "blue", lty = 2, )
lines(c(0, 2.5), c(0,3), col = "blue", lty = 2, )
lines(c(0, 2.5), c(0,2.5), col = "blue", lty = 2, )
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-0, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
lines(c(0, 2.5), c(0,2.5), col = "blue", lty = 2, )
lines(c(-0.5, 2.5), c(-0.5,2.5), col = "blue", lty = 2, )
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-0, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
lines(c(-0.5, 2.5), c(-0.5,2.5), col = "blue", lty = 2, )
lines(c(-0.5, 2.5), c(-0.5,2.5), col = "blue", lty = 2, cex = 2)
lines(c(-0.5, 2.5), c(-0.5,2.5), col = "blue", lty = 2, cex = 20)
lines(c(-0.5, 2.5), c(-0.5,2.5), col = "blue", lty = 2, pch = 10)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-0, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
lines(c(-0.5, 2.5), c(-0.5,2.5), col = "blue", lty = 2)
lines(c(-0.5, 2.5), c(-0.5,2.5), col = "green", lty = 2)
lines(c(-0.5, 2.5), c(-0.5,2.5), col = "blue", lty = 2)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
abline(0.3, 0.28, col = "red")
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
abline(0.3, 0.28, col = "red")
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z", main= "2D regression")
scatterplot3d(x,y,z, main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
abline(v = 0.5, col = "red")
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z", main= "2D regression")
fit = lm(y~x)
abline(0.3, 0.28, col = "red")
scatterplot3d(x,y,z, main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
abline(v = 0.5, col = "red")
scatterplot3d(x,y,z, main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z", main = "3D Regression")
abline(v = 0.5, col = "red")
scatterplot3d(x,y,z, main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z", main = "3D Regression")
abline(v = 0.5, col = "red")
fit = lm(y~x)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z", main= "2D regression")
fit = lm(y~x)
abline(0.3, 0.28, col = "red")
scatterplot3d(x,y,z, main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z", main = "3D Regression")
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z", main= "2D regression")
fit = lm(y~x)
setwd("~/Desktop/GIT/Aggregation-Proxy/Measurements/TimestampComparison")
setwd("~/Desktop/GIT/Aggregation-Proxy/Measurements/TimestampComparison")
noise = read.table("lightTimestamps.txt")
plot(noise)
plot(noise, type = 'l')
plot(noise)
View(noise)
View(noise)
light = read.table("lightTimestamps.txt")
plot(1:length(light), light)
1:length(light)
light
plot(1:nrow(light), light)
nrow(light)
1:nrow(light)
light
plot(1:nrow(light), light)
View(light)
nrow(light)
length(1:nrow(light))
nrow(light)
plot(1:nrow(light), light)
plot(1:nrow(light), light[,1])
View(light)
View(light)
light.reduced = light - min(light[,1])
light.reduced = light[,1] - min(light[,1])
light = read.table("lightTimestamps.txt")
light.reduced = light[,1] - min(light[,1])
plot(1:nrow(light.reduced), light.reduced)
light.reduced
plot(1:length(light.reduced), light.reduced)
light.reduced.sec = light.reduced / 1000
light = read.table("lightTimestamps.txt")
n = nrow(light)
light.reduced = (light[,1] - min(light[,1]))
light.reduced.sec = light.reduced / 1000
plot(1:n, light.reduced.sec)
light.reduced.min = light.reduced / 60000
plot(1:n, light.reduced.min)
plot(1:n, light.reduced.min, xlim = c(0, 100))
plot(1:n, light.reduced.min, xlim = c(0, 100), ylim = c(0, 40))
plot(1:n, light.reduced.min, xlim = c(0, 100), ylim = c(0, 30))
plot(light.reduced.min, 1:n, xlim = c(0, 100), ylim = c(0, 30))
plot(light.reduced.min, 1:n, ylim = c(0, 100), xlim = c(0, 30))
plot(light.reduced.min, 1:n, xlim = c(0, 10), ylim = c(0, 100))
plot(light.reduced.min, 1:n, xlim = c(0, 100), ylim = c(0, 100))
nOfDisplay = 100
plot(light.reduced.min, 1:n, xlim = c(0, nOfDisplay), ylim = c(0, light.reduced.min[nOfDisplay]))
plot(light.reduced.min, 1:n, xlim = c(0, light.reduced.min[nOfDisplay]), ylim = c(0, nOfDisplay))
nOfDisplay = 200
plot(light.reduced.min, 1:n, xlim = c(0, light.reduced.min[nOfDisplay]), ylim = c(0, nOfDisplay))
nOfDisplay = 10000
plot(light.reduced.min, 1:n, xlim = c(0, light.reduced.min[nOfDisplay]), ylim = c(0, nOfDisplay))
nOfDisplay = 1000
plot(light.reduced.min, 1:n, xlim = c(0, light.reduced.min[nOfDisplay]), ylim = c(0, nOfDisplay))
nOfDisplay = 2000
plot(light.reduced.min, 1:n, xlim = c(0, light.reduced.min[nOfDisplay]), ylim = c(0, nOfDisplay))
nOfDisplay = 20
plot(light.reduced.min, 1:n, xlim = c(0, light.reduced.min[nOfDisplay]), ylim = c(0, nOfDisplay))
plot(light.reduced.sec, 1:n, xlim = c(0, light.reduced.min[nOfDisplay]), ylim = c(0, nOfDisplay))
nOfDisplay = 20
plot(light.reduced.sec, 1:n, xlim = c(0, light.reduced.min[nOfDisplay]), ylim = c(0, nOfDisplay))
plot(light.reduced.min, 1:n, xlim = c(0, light.reduced.min[nOfDisplay]), ylim = c(0, nOfDisplay))
plot(light.reduced.sec, 1:n, xlim = c(0, light.reduced.sec[nOfDisplay]), ylim = c(0, nOfDisplay))
nOfDisplay = 50
plot(light.reduced.sec, 1:n, xlim = c(0, light.reduced.sec[nOfDisplay]), ylim = c(0, nOfDisplay))
start = 1000
end = 2000
plot(light.reduced.sec, 1:n, xlim = c(light.reduced.sec[start], light.reduced.sec[end]), ylim = c(start, end))
start = 2000
end = n
plot(light.reduced.sec, 1:n, xlim = c(light.reduced.sec[start], light.reduced.sec[end]), ylim = c(start, end))
start = n-10
end = n
plot(light.reduced.sec, 1:n, xlim = c(light.reduced.sec[start], light.reduced.sec[end]), ylim = c(start, end))
window = 10
end = n
start = n-window
plot(light.reduced.sec, 1:n, xlim = c(light.reduced.sec[start], light.reduced.sec[end]), ylim = c(start, end))
end = n-20
start = n-window
plot(light.reduced.sec, 1:n, xlim = c(light.reduced.sec[start], light.reduced.sec[end]), ylim = c(start, end))
window = 10
end = n-20
start = end-window
plot(light.reduced.sec, 1:n, xlim = c(light.reduced.sec[start], light.reduced.sec[end]), ylim = c(start, end))
end = n-50
start = end-window
plot(light.reduced.sec, 1:n, xlim = c(light.reduced.sec[start], light.reduced.sec[end]), ylim = c(start, end))
window = 100
end = n-50
start = end-window
plot(light.reduced.sec, 1:n, xlim = c(light.reduced.sec[start], light.reduced.sec[end]), ylim = c(start, end))
window = 1000
end = n-50
start = end-window
plot(light.reduced.sec, 1:n, xlim = c(light.reduced.sec[start], light.reduced.sec[end]), ylim = c(start, end))
window = 2000
end = n-50
start = end-window
plot(light.reduced.sec, 1:n, xlim = c(light.reduced.sec[start], light.reduced.sec[end]), ylim = c(start, end))
window = 100
end = n-50
start = end-window
plot(light.reduced.sec, 1:n, xlim = c(light.reduced.sec[start], light.reduced.sec[end]), ylim = c(start, end))
window = 2000
end = n-50
start = end-window
plot(light.reduced.sec, 1:n, xlim = c(light.reduced.sec[start], light.reduced.sec[end]), ylim = c(start, end))
