dim(z)
library(scatterplot3d)
attach(mtcars)
require(scatterplot3d)
require(scatterplot3d)
library(scatterplot3d)
install.packages("scatterplot3d")
library(scatterplot3d)
attach(mtcars)
y = 4 + rnorm(40)
x = 4 + rnorm(40)
y = c(y, 18 +rnorm(8))
x = c(x, 18 +rnorm(8))
z = rnorm(48, sd = 100)
scatterplot3d(y,x,z, main="3D Scatterplot")
scatterplot3d(z,x,y, main="3D Scatterplot")
abline(1, 1, 1)
abline(1, 1)
scatterplot3d(z,x,y, main="3D Scatterplot")
abline(1, 1)
abline(fit$coefficients)
abline(3, 6, 1)
scatterplot3d(z,x,y, main="3D Scatterplot")
?abline
scatterplot3d(z,x,y, main="3D Scatterplot")
scatterplot3d(x,y,z, main="3D Scatterplot")
z
z
scatterplot3d(z,x,y, main="3D Scatterplot")
abline(3, 6)
scatterplot3d(z,x,y, main="3D Scatterplot")
scatterplot3d(z,x,y, main="3D Scatterplot", pch = "3")
scatterplot3d(z,x,y, main="3D Scatterplot", pch = "*")
scatterplot3d(z,x,y, main="3D Scatterplot", pch = 20)
scatterplot3d(0,x,y, main="3D Scatterplot", pch = 20)
scatterplot3d(rep(0, length(x)),x,y, main="3D Scatterplot", pch = 20)
y = rnorm(40)
x = rnorm(40)
y = c(y, rnorm(8))
x = c(x, 18 +rnorm(8))
plot(x, y)
fit = lm(y~x)
abline(fit$coefficients, col = "red")
z = rnorm(48, sd = 100)
fit2 = lm(y~x+z)
scatterplot3d(z,x,y, main="3D Scatterplot", pch = 20)
y = rnorm(40)
x = rnorm(40)
y = c(y, 18 +rnorm(8))
x = c(x, 18 +rnorm(8))
y = rnorm(40)
x = rnorm(40)
y = c(y, 18 +rnorm(8))
x = c(x, 18 +rnorm(8))
z = rnorm(48, sd = 100)
library(scatterplot3d)
attach(mtcars)
scatterplot3d(rep(0, length(x)),x,y, main="3D Scatterplot", pch = 20)
scatterplot3d(z,x,y, main="3D Scatterplot", pch = 20)
fit = lm(y~x)
fit2 = lm(x+y+z)
fit2 = lm(y~x+z)
fit2
plot(y, z)
abline(fit2$coefficients[c(1, 3)])
fit2$coefficients
abline(fit2$coefficients[c(1, 2)])
scatterplot3d(z,x,y, main="3D Scatterplot", pch = 20)
z = rnorm(40)
y = rnorm(40)
x = rnorm(40)
y = c(y, 18 +rnorm(8))
x = c(x, 18 +rnorm(8))
z = rnorm(40, sd = 100)
z = c(z, rnorm(18, sd = 1))
scatterplot3d(z,x,y, main="3D Scatterplot", pch = 20)
y = rnorm(40)
x = rnorm(40)
y = c(y, 18 +rnorm(8))
x = c(x, 18 +rnorm(8))
z = rnorm(40, sd = 100)
z = c(z, rnorm(8, sd = 1))
library(scatterplot3d)
attach(mtcars)
scatterplot3d(rep(0, length(x)),x,y, main="3D Scatterplot", pch = 20)
scatterplot3d(z,x,y, main="3D Scatterplot", pch = 20)
scatterplot3d(x,y,z, main="3D Scatterplot", pch = 20)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20)
scatterplot3d(x,y,z, main="3D Scatterplot", pch = 20)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20)
scatterplot3d(x,y,z, main="3D Scatterplot", pch = 20)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300))
scatterplot3d(x,y,z, main="3D Scatterplot", pch = 20)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300))
scatterplot3d(x,y,z, main="3D Scatterplot", pch = 20)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300))
fit = lm(y~x)
lines(fit$coefficients)
abline(fit$coefficients)
abline(0, 0.4)
abline(0, 0.2)
abline(40, 0.2)
abline(40, 0.2)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300))
fit = lm(y~x)
abline(40, 0.2)
abline(10, 0.2)
abline(3, 0.2)
abline(1, 0.2)
abline(0.2, 0.2)
abline(0.4, 0.2)
abline(0.3, 0.2)
abline(0.3, 0.3)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300))
fit = lm(y~x)
abline(0.3, 0.3)
abline(0.3, 0.27)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300))
fit = lm(y~x)
abline(0.3, 0.28)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300))
fit = lm(y~x)
abline(0.3, 0.28, col = "red")
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = x)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
scatterplot3d(x,y,z, main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
abline(0.3, 1, col = "red")
abline(0.3, 10, col = "red")
abline(0.3, 100, col = "red")
abline(0.3, 1000, col = "red")
scatterplot3d(x,y,z, main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
abline(0.3, 1000, col = "red")
vline(0.3, 1000, col = "red")
abline(v = 4, col = "red")
abline(v = 1, col = "red")
abline(v = 0.5, col = "red")
scatterplot3d(x,y,z, main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
abline(v = 0.5, col = "red")
attach(mtcars)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
abline(0.3, 0.28, col = "red")
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
abline(0.3, 0.28, col = "red")
abline(0.3, 0.28, col = "blue", lty = 2)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
abline(0.3, 0.28, col = "blue", lty = 2)
abline(0.3, 0.4, col = "blue", lty = 2)
abline(0.25, 0.4, col = "blue", lty = 2)
abline(0.2, 0.4, col = "blue", lty = 2)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
abline(0.2, 0.4, col = "blue", lty = 2)
abline(0.1, 0.4, col = "blue", lty = 2)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
abline(0.1, 0.4, col = "blue", lty = 2)
abline(0.1, 0.6, col = "blue", lty = 2)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
abline(0.1, 0.5, col = "blue", lty = 2)
abline(0.1, 0.8, col = "blue", lty = 2)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
abline(0.1, 0.8, col = "blue", lty = 2)
abline(0.1, 1, col = "blue", lty = 2)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
abline(0.1, 1, col = "blue", lty = 2)
abline(0.1, -1, col = "blue", lty = 2)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
abline(0.1, -0.3, col = "blue", lty = 2)
abline(0.1, -10, col = "blue", lty = 2)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-0, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
abline(0.1, -10, col = "blue", lty = 2)
abline(0.1, 10, col = "blue", lty = 2)
abline(0.1, 0.8, col = "blue", lty = 2)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-0, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
abline(0.1, 0.8, col = "blue", lty = 2)
lines(c(0, 5), c(0,15), col = "blue", lty = 2, )
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-0, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
lines(c(0, 5), c(0,15), col = "blue", lty = 2, )
lines(c(0, 5), c(0,1), col = "blue", lty = 2, )
lines(c(0, 5), c(0,4), col = "blue", lty = 2, )
lines(c(0, 5), c(0,3), col = "blue", lty = 2, )
lines(c(0, 5), c(0,2), col = "blue", lty = 2, )
lines(c(0, 2), c(0,2), col = "blue", lty = 2, )
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-0, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
lines(c(0, 2), c(0,2), col = "blue", lty = 2, )
lines(c(0, 2), c(0,3), col = "blue", lty = 2, )
lines(c(0, 3), c(0,3), col = "blue", lty = 2, )
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-0, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
lines(c(0, 3), c(0,3), col = "blue", lty = 2, )
lines(c(0, 2.5), c(0,3), col = "blue", lty = 2, )
lines(c(0, 2.5), c(0,2.5), col = "blue", lty = 2, )
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-0, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
lines(c(0, 2.5), c(0,2.5), col = "blue", lty = 2, )
lines(c(-0.5, 2.5), c(-0.5,2.5), col = "blue", lty = 2, )
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-0, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
lines(c(-0.5, 2.5), c(-0.5,2.5), col = "blue", lty = 2, )
lines(c(-0.5, 2.5), c(-0.5,2.5), col = "blue", lty = 2, cex = 2)
lines(c(-0.5, 2.5), c(-0.5,2.5), col = "blue", lty = 2, cex = 20)
lines(c(-0.5, 2.5), c(-0.5,2.5), col = "blue", lty = 2, pch = 10)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-0, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
lines(c(-0.5, 2.5), c(-0.5,2.5), col = "blue", lty = 2)
lines(c(-0.5, 2.5), c(-0.5,2.5), col = "green", lty = 2)
lines(c(-0.5, 2.5), c(-0.5,2.5), col = "blue", lty = 2)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
abline(0.3, 0.28, col = "red")
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
fit = lm(y~x)
abline(0.3, 0.28, col = "red")
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z", main= "2D regression")
scatterplot3d(x,y,z, main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
abline(v = 0.5, col = "red")
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z", main= "2D regression")
fit = lm(y~x)
abline(0.3, 0.28, col = "red")
scatterplot3d(x,y,z, main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z")
abline(v = 0.5, col = "red")
scatterplot3d(x,y,z, main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z", main = "3D Regression")
abline(v = 0.5, col = "red")
scatterplot3d(x,y,z, main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z", main = "3D Regression")
abline(v = 0.5, col = "red")
fit = lm(y~x)
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z", main= "2D regression")
fit = lm(y~x)
abline(0.3, 0.28, col = "red")
scatterplot3d(x,y,z, main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z", main = "3D Regression")
scatterplot3d(x,y,rep(0, length(x)), main="3D Scatterplot", pch = 20, zlim = c(-200, 300),
xlab = "x", ylab = "y", zlab = "z", main= "2D regression")
fit = lm(y~x)
setwd("~/Desktop/GIT/Aggregation-Proxy/Measurements/TimestampComparison")
source('~/Desktop/GIT/Aggregation-Proxy/Measurements/TimestampComparison/plotTimestamps.R')
setwd("~/Desktop/GIT/Aggregation-Proxy/Measurements/TimestampComparison")
light = read.table("./timestamps/lightTimestamps-3.txt")
n = nrow(light)
light.reduced = (light[,1] - min(light[,1]))
light.reduced.sec = light.reduced / 1000
light.reduced.min = light.reduced / 60000
end = n
start = 0
plot(light.reduced.sec, 1:n, xlim = c(light.reduced.sec[start], light.reduced.sec[end]), ylim = c(start, end))
n = nrow(light)
light.reduced = (light[,1] - min(light[,1]))
light.reduced.sec = light.reduced / 1000
light.reduced.min = light.reduced / 60000
window = 2000
end = n
start = 0
plot(light.reduced.sec, 1:n, xlim = c(light.reduced.sec[start], light.reduced.sec[end]), ylim = c(start, end))
View(light)
window = 2000
end = n
start = 1
plot(light.reduced.sec, 1:n, xlim = c(light.reduced.sec[start], light.reduced.sec[end]), ylim = c(start, end))
battery = read.table("./timestamps/batteryTimestamps-3.txt")
n = nrow(battery)
light.n = nrow(light)
battery.n = nrow(battery)
battery = read.table("./timestamps/batteryTimestamps-3.txt")
battery.n = nrow(battery)
battery.reduced = (battery[,1] - min(light[,1]))
battery.reduced.sec =battery.reduced / 1000
battery.reduced = (battery[,1] - min(battery[,1]))
battery.reduced.sec =battery.reduced / 1000
battery.reduced.min =battery.reduced / 60000
points(battery.reduced.sec, 1:battery.n)
points(battery.reduced.sec, 1:battery.n, col = 'red')
View(battery)
View(battery)
plot(battery.reduced.sec, 1:battery.n, col = 'red')
plot(battery, 1:battery.n, col = 'red')
plot(battery[,1], 1:battery.n, col = 'red')
.reduced.sec
plot(battery.reduced.sec, 1:battery.n, col = 'red')
plot(battery.reduced.min, 1:battery.n, col = 'red')
sec
plot(battery.reduced.sec, 1:battery.n, col = 'red')
View(battery)
View(battery)
battery = battery[-1,]
battery.n = nrow(battery)
battery.reduced = (battery[,1] - min(battery[,1]))
battery.reduced.sec =battery.reduced / 1000
battery.reduced.min =battery.reduced / 60000
battery = read.table("./timestamps/batteryTimestamps-3.txt")
battery = battery[-1,]
battery
battery.n = length(battery)
battery.reduced = (battery[,1] - min(battery[,1]))
battery.reduced = (battery - min(battery))
battery.reduced.sec =battery.reduced / 1000
battery.reduced.min =battery.reduced / 60000
plot(battery.reduced.sec, 1:battery.n, col = 'red')
window = 2000
end = light.n
start = 1
plot(light.reduced.sec, 1:light.n, xlim = c(light.reduced.sec[start], light.reduced.sec[end]), ylim = c(start, end))
points(battery.reduced.sec, 1:battery.n, col = 'red')
plot(light.reduced.sec, 1:light.n, xlim = c(light.reduced.sec[start], light.reduced.sec[end]), ylim = c(start, end), pch = 20)
plot(light.reduced.sec, 1:light.n, xlim = c(light.reduced.sec[start], light.reduced.sec[end]), ylim = c(start, end), pch = '.')
points(battery.reduced.sec, 1:battery.n, col = 'red', pch = '.')
noise = read.table("./timestamps/noiseTimestamps-4.txt")
noise.n = length(noise)
noise.n = nrow(noise)
noise = read.table("./timestamps/noiseTimestamps-4.txt")[,1]
noise.n = length(noise)
noise.reduced = (noise - min(noise))
noise.reduced.sec =noise.reduced / 1000
noise.reduced.min =noise.reduced / 60000
source('~/.active-rstudio-document')
setwd("~/Desktop/GIT/Aggregation-Proxy/Measurements/TimestampComparison")
light = read.table("./timestamps/lightTimestamps-4.txt")
light.n = nrow(light)
light.reduced = (light[,1] - min(light[,1]))
light.reduced.sec = light.reduced / 1000
light.reduced.min = light.reduced / 60000
battery = read.table("./timestamps/batteryTimestamps-4.txt")
battery = battery[-1,]
battery.n = length(battery)
battery.reduced = (battery - min(battery))
battery.reduced.sec =battery.reduced / 1000
battery.reduced.min =battery.reduced / 60000
noise = read.table("./timestamps/noiseTimestamps-4.txt")[,1]
noise.n = length(noise)
noise.reduced = (noise - min(noise))
noise.reduced.sec =noise.reduced / 1000
noise.reduced.min =noise.reduced / 60000
window = 2000
end = light.n
start = 1
plot(light.reduced.sec, 1:light.n, xlim = c(light.reduced.sec[start], light.reduced.sec[end]), ylim = c(start, end), pch = '.')
points(battery.reduced.sec, 1:battery.n, col = 'red', pch = '.')
points(noise.reduced.sec, 1:noise.n, col = 'blue', pch = '.')
noise.reduced.sec
plot(noise.reduced.sec, 1:noise.n, col = 'blue', pch = '.')
source('~/.active-rstudio-document')
points(noise.reduced.sec, 1:noise.n, col = 'blue', pch = '.')
plot(noise.reduced.sec, 1:noise.n, col = 'blue', pch = '.')
plot(light.reduced.sec, 1:light.n, xlim = c(light.reduced.sec[start], light.reduced.sec[end]), ylim = c(start, end), pch = '.')
points(battery.reduced.sec, 1:battery.n, col = 'red', pch = '.')
points(noise.reduced.sec, 1:noise.n, col = 'blue', pch = '.')
plot(light.reduced.sec, 1:light.n, xlim = c(light.reduced.sec[start], light.reduced.sec[end]), ylim = c(start, 300), pch = '.')
points(battery.reduced.sec, 1:battery.n, col = 'red', pch = '.')
points(noise.reduced.sec, 1:noise.n, col = 'blue', pch = '.')
plot(light.reduced.sec, 1:light.n, xlim = c(light.reduced.sec[start], light.reduced.sec[end]), ylim = c(start, 3000), pch = '.')
points(battery.reduced.sec, 1:battery.n, col = 'red', pch = '.')
points(noise.reduced.sec, 1:noise.n, col = 'blue', pch = '.')
noise.n
min(noise)
min(light[,1])
plot(light.reduced.sec, 1:light.n, xlim = c(light.reduced.sec[start], light.reduced.sec[end]), ylim = c(start, 1500), pch = '.')
points(battery.reduced.sec, 1:battery.n, col = 'red', pch = '.')
points(noise.reduced.sec, 1:noise.n, col = 'blue', pch = '.')
plot(light, 1:light.n, pch = '.')
plot(light[,1], 1:light.n, pch = '.')
points(battery, 1:battery.n, col = 'red', pch = '.')
points(noise, 1:noise.n, col = 'blue', pch = '.')
plot(light[,1], 1:light.n, pch = '.', ylim = c(0, max(light.n, battery.n, noise.n)))
points(battery, 1:battery.n, col = 'red', pch = '.')
points(noise, 1:noise.n, col = 'blue', pch = '.')
plot(light[,1], 1:light.n, ylim = c(0, max(light.n, battery.n, noise.n)), pch = '.')
points(battery, 1:battery.n, col = 'red', pch = '20')
plot(light[,1], 1:light.n, ylim = c(0, max(light.n, battery.n, noise.n)), pch = 20)
points(battery, 1:battery.n, col = 'red', pch = 20)
points(noise, 1:noise.n, col = 'blue', pch = 20)
plot(light[,1], 1:light.n, ylim = c(0, max(light.n, battery.n, noise.n)), pch = 20, col = alpha('black', 0.5))
plot(light[,1], 1:light.n, ylim = c(0, max(light.n, battery.n, noise.n)), pch = 20, col =  adjustcolor('black', alpha.f = 0.3) )
plot(light[,1], 1:light.n, ylim = c(0, max(light.n, battery.n, noise.n)), pch = 20, col =  adjustcolor('black', alpha.f = 0.5) )
plot(light[,1], 1:light.n, ylim = c(0, max(light.n, battery.n, noise.n)), pch = 20, col =  adjustcolor('black', alpha.f = 0.1) )
plot(light[,1], 1:light.n, ylim = c(0, max(light.n, battery.n, noise.n)), pch = 20, col =  adjustcolor('black', alpha.f = 0.2) )
points(battery, 1:battery.n, pch = 20, col = adjustcolor('red', alpha.f = 0.2))
points(noise, 1:noise.n, pch = 20, col = adjustcolor('black', alpha.f = 0.2))
points(noise, 1:noise.n, pch = 20, col = adjustcolor('blue', alpha.f = 0.2))
plot(light[,1], 1:light.n, ylim = c(0, max(light.n, battery.n, noise.n)), pch = 20, col = adjustcolor('black', alpha.f = 0.2) )
points(battery, 1:battery.n, pch = 20, col = adjustcolor('red', alpha.f = 0.2))
points(noise, 1:noise.n, pch = 20, col = adjustcolor('blue', alpha.f = 0.2))
plot(light[,1], 1:light.n, ylim = c(0, max(light.n, battery.n, noise.n)), pch = 20, col = adjustcolor('green', alpha.f = 0.2) )
points(battery, 1:battery.n, pch = 20, col = adjustcolor('red', alpha.f = 0.2))
points(noise, 1:noise.n, pch = 20, col = adjustcolor('blue', alpha.f = 0.2))
plot(light[,1], 1, ylim = c(0, max(light.n, battery.n, noise.n)), pch = 20, col = adjustcolor('green', alpha.f = 0.2) )
points(battery, 2, pch = 20, col = adjustcolor('red', alpha.f = 0.2))
points(noise, 3, pch = 20, col = adjustcolor('blue', alpha.f = 0.2))
plot(light[,1], y=1, ylim = c(0, max(light.n, battery.n, noise.n)), pch = 20, col = adjustcolor('green', alpha.f = 0.2) )
plot(light[,1], rep(1, light.n), ylim = c(0, max(light.n, battery.n, noise.n)), pch = 20, col = adjustcolor('green', alpha.f = 0.2) )
points(battery, rep(2, battery.n), pch = 20, col = adjustcolor('red', alpha.f = 0.2))
points(noise, rep(3, noise.n), pch = 20, col = adjustcolor('blue', alpha.f = 0.2))
plot(light[,1], rep(1, light.n), pch = 20, col = adjustcolor('green', alpha.f = 0.2) )
points(battery, rep(2, battery.n), pch = 20, col = adjustcolor('red', alpha.f = 0.2))
points(noise, rep(3, noise.n), pch = 20, col = adjustcolor('blue', alpha.f = 0.2))
plot(light[,1], rep(1, light.n), pch = 20, col = adjustcolor('green', alpha.f = 0.2), ylim = c(0, 4) )
points(battery, rep(2, battery.n), pch = 20, col = adjustcolor('red', alpha.f = 0.2))
points(noise, rep(3, noise.n), pch = 20, col = adjustcolor('blue', alpha.f = 0.2))
plot(light[,1], rep(3, light.n), pch = 20, col = adjustcolor('green', alpha.f = 0.2), ylim = c(0, 4) )
points(battery, rep(2, battery.n), pch = 20, col = adjustcolor('red', alpha.f = 0.2))
points(noise, rep(1, noise.n), pch = 20, col = adjustcolor('blue', alpha.f = 0.2))
setwd("~/Desktop/GIT/Aggregation-Proxy/Measurements/TimestampComparison")
light = read.table("./timestamps/lightTimestamps-6.txt")
light.n = nrow(light)
battery = read.table("./timestamps/batteryTimestamps-6.txt")
battery.n = nrow(battery)
noise = read.table("./timestamps/noiseTimestamps-6.txt")[,1]
noise.n = nrow(noise)
plot(light, pch = 20, col = adjustcolor('green', alpha.f = 0.2), ylim = c(0, 4) )
View(light)
View(light)
plot(light, pch = 20, col = adjustcolor('green', alpha.f = 0.2) )
points(battery, pch = 20, col = adjustcolor('red', alpha.f = 0.2))
points(noise, pch = 20, col = adjustcolor('blue', alpha.f = 0.2))
plot(noise, pch = 20, col = adjustcolor('blue', alpha.f = 0.2))
View(light)
noise = read.table("./timestamps/noiseTimestamps-6.txt")
noise.n = nrow(noise)
# Plot realtime
plot(light, pch = 20, col = adjustcolor('green', alpha.f = 0.2) )
points(battery, pch = 20, col = adjustcolor('red', alpha.f = 0.2))
plot(noise, pch = 20, col = adjustcolor('blue', alpha.f = 0.2))
plot(light, pch = 20, col = adjustcolor('green', alpha.f = 0.2) )
points(battery, pch = 20, col = adjustcolor('red', alpha.f = 0.2))
points(noise, pch = 20, col = adjustcolor('blue', alpha.f = 0.2))
plot(light, pch = 20, col = adjustcolor('green', alpha.f = 0.2) , type = 'l')
points(battery, pch = 20, col = adjustcolor('red', alpha.f = 0.2), type = 'l')
points(noise, pch = 20, col = adjustcolor('blue', alpha.f = 0.2), type = 'l')
plot(light, pch = 20, col = adjustcolor('green', alpha.f = 0.7) , type = 'l')
points(battery, pch = 20, col = adjustcolor('red', alpha.f = 0.7), type = 'l')
points(noise, pch = 20, col = adjustcolor('blue', alpha.f = 0.7), type = 'l')
par(mfrow=c(2, 1))
plot(light, pch = 20, col = adjustcolor('green', alpha.f = 0.7) , type = 'l')
points(battery, pch = 20, col = adjustcolor('red', alpha.f = 0.7), type = 'l')
points(noise, pch = 20, col = adjustcolor('blue', alpha.f = 0.7), type = 'l')
plot(light, pch = 20, col = adjustcolor('green', alpha.f = 0.7))
points(battery, pch = 20, col = adjustcolor('red', alpha.f = 0.7))
points(noise, pch = 20, col = adjustcolor('blue', alpha.f = 0.7))
par(mfrow=c(2, 1))
plot(light, pch = 20, col = adjustcolor('green', alpha.f = 0.7) , type = 'l')
points(battery, pch = 20, col = adjustcolor('red', alpha.f = 0.7), type = 'l')
points(noise, pch = 20, col = adjustcolor('blue', alpha.f = 0.7), type = 'l')
plot(light, pch = 20, col = adjustcolor('green', alpha.f = 0.2))
points(battery, pch = 20, col = adjustcolor('red', alpha.f = 0.2))
points(noise, pch = 20, col = adjustcolor('blue', alpha.f = 0.2))
plot(light[,1], rep(3, light.n), pch = 20, col = adjustcolor('green', alpha.f = 0.2))
points(battery[,1], rep(2, battery.n), pch = 20, col = adjustcolor('red', alpha.f = 0.2))
points(noise[,1], rep(1, noise.n), pch = 20, col = adjustcolor('blue', alpha.f = 0.2))
plot(light[,1], rep(3, light.n), pch = 20, col = adjustcolor('green', alpha.f = 0.2), ylim = c(0, 5))
points(battery[,1], rep(2, battery.n), pch = 20, col = adjustcolor('red', alpha.f = 0.2))
points(noise[,1], rep(1, noise.n), pch = 20, col = adjustcolor('blue', alpha.f = 0.2))
par(mfrow=c(2, 1))
plot(light[,1], rep(3, light.n), pch = 20, col = adjustcolor('green', alpha.f = 0.2), ylim = c(0, 5))
points(battery[,1], rep(2, battery.n), pch = 20, col = adjustcolor('red', alpha.f = 0.2))
points(noise[,1], rep(1, noise.n), pch = 20, col = adjustcolor('blue', alpha.f = 0.2))
plot(light, pch = 20, col = adjustcolor('green', alpha.f = 0.7) , type = 'l')
points(battery, pch = 20, col = adjustcolor('red', alpha.f = 0.7), type = 'l')
points(noise, pch = 20, col = adjustcolor('blue', alpha.f = 0.7), type = 'l')
light = read.table("./timestamps/lightTimestamps-7.txt")
light.n = nrow(light)
battery = read.table("./timestamps/batteryTimestamps-7.txt")
battery.n = nrow(battery)
noise = read.table("./timestamps/noiseTimestamps-7.txt")
noise.n = nrow(noise)
# Plot realtime
par(mfrow=c(2, 1))
plot(light[,1], rep(3, light.n), pch = 20, col = adjustcolor('green', alpha.f = 0.2), ylim = c(0, 5))
points(battery[,1], rep(2, battery.n), pch = 20, col = adjustcolor('red', alpha.f = 0.2))
points(noise[,1], rep(1, noise.n), pch = 20, col = adjustcolor('blue', alpha.f = 0.2))
plot(light, pch = 20, col = adjustcolor('green', alpha.f = 0.7) , type = 'l')
points(battery, pch = 20, col = adjustcolor('red', alpha.f = 0.7), type = 'l')
points(noise, pch = 20, col = adjustcolor('blue', alpha.f = 0.7), type = 'l')
