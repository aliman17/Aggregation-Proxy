package publish.subscribe.parser;

import java.net.InetAddress;
import java.net.SocketException;
import java.net.UnknownHostException;

import json.node.CommunicationListener;

public class Server implements ServerInterface{
	private AsyncReceiver asyncReceiver;
	private JsonServerParserInterface parser;
	private String serverIP;
	private String serverID;
	private String serverPort;
	private String clientQueueName;
	private String brokerUrl;
	
	private GetPropertyValues properties;
	
	public Server(){
		try {
			serverIP = getMyIp();
		} catch (UnknownHostException e) {
			e.printStackTrace();
		}
		
		properties = new GetPropertyValues();
		serverPort = properties.serverPort;
		clientQueueName = properties.clientQueueName;
		brokerUrl = "tcp://" + serverIP + ":" + serverPort;
		asyncReceiver = new AsyncReceiver(brokerUrl, clientQueueName);
		parser = new JsonServerParser(this);
	}

	@Override
	public void sendJson(String json, String clientIP) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void start() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public String getIP() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String getID() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void addListener(CommunicationListener listener) {
		// TODO Auto-generated method stub
		
	}
	
	public static String getMyIp() throws UnknownHostException {
		return InetAddress.getLocalHost().getHostAddress();
	}
	
	public static void main(String[] args){
		Server server = new Server();
	}
}
