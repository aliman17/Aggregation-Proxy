package publish.subscribe.parser;

import org.apache.activemq.ActiveMQConnectionFactory;

import publish.subscribe.string.TestConstants;

import javax.jms.*;
 
public class Sender implements SenderInterface {
    private static int ackMode;
    private static String clientQueueName;
 
    private boolean transacted = false;
    private MessageProducer producer;
 
    static {
        clientQueueName = "client.messages";
        ackMode = Session.AUTO_ACKNOWLEDGE;
    }
 
    public Sender() {}


	@Override
	public void send(String stringMessage, String serverIP, String port) throws Exception {
		ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(serverIP + ":" + port);
        Connection connection;
        try {
            connection = connectionFactory.createConnection();
            connection.start();
            Session session = connection.createSession(transacted, ackMode);
            Destination adminQueue = session.createQueue(clientQueueName);
 
            //Setup a message producer to send message to the queue the server is consuming from
            this.producer = session.createProducer(adminQueue);
            this.producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
 
            //Now create the actual message you want to send
            TextMessage txtMessage = session.createTextMessage();
            txtMessage.setText(stringMessage);

            this.producer.send(txtMessage);
        } catch (JMSException e) {
            //Handle the exception appropriately
        	System.out.println(e);
        }
	}
	
	public static void main(String[] args) throws Exception{
		Sender sender = new Sender();
		sender.send("Hello", TestConstants.serverIP, TestConstants.port);
	}
}
